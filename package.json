{
    "name": "tagexplorer",
    "displayName": "Tag Tree",
    "description": "Show tags in a tree view",
    "keywords": [
        "tag"
    ],
    "version": "0.0.179",
    "license": "MIT",
    "icon": "resources/tagexplorer.png",
    "publisher": "Warr1611",
    "engines": {
        "vscode": "^1.5.0"
    },
    "repository": "https://github.com/Warr1611/tagexplorer",
    "scripts": {
        "test": "./node_modules/node-qunit/bin/cli.js -c utils.js -t test/tests.js"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./extension",
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "tagexplorer-container",
                    "title": "Tags",
                    "icon": "resources/tagexplorer-container.svg"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "id": "tagexplorer-view-explorer",
                    "name": "TODOs",
                    "when": "tagexplorer-has-content && tagexplorer-in-explorer"
                }
            ],
            "tagexplorer-container": [
                {
                    "id": "tagexplorer-view",
                    "name": "Tags"
                }
            ]
        },
        "menus": {
            "view/title": [
                {
                    "command": "tagexplorer.exportTree",
                    "when": "view =~ /tagexplorer/ && tagexplorer-show-export-button == true",
                    "group": "navigation@1"
                },
                {
                    "command": "tagexplorer.reveal",
                    "when": "view =~ /tagexplorer/ && tagexplorer-show-reveal-button == true",
                    "group": "navigation@2"
                },
                {
                    "command": "tagexplorer.scanOpenFilesOnly",
                    "when": "view =~ /tagexplorer/ && tagexplorer-scan-mode == workspace && tagexplorer-show-scan-mode-button == true",
                    "group": "navigation@3"
                },
                {
                    "command": "tagexplorer.scanCurrentFileOnly",
                    "when": "view =~ /tagexplorer/ && tagexplorer-scan-mode == 'open files' && tagexplorer-show-scan-mode-button == true",
                    "group": "navigation@3"
                },
                {
                    "command": "tagexplorer.scanWorkspace",
                    "when": "view =~ /tagexplorer/ && tagexplorer-scan-mode == 'current file' && tagexplorer-show-scan-mode-button == true",
                    "group": "navigation@3"
                },
                {
                    "command": "tagexplorer.showFlatView",
                    "when": "view =~ /tagexplorer/ && tagexplorer-flat == false && tagexplorer-tags-only == false && tagexplorer-show-view-style-button == true",
                    "group": "navigation@4"
                },
                {
                    "command": "tagexplorer.showTagsOnlyView",
                    "when": "view =~ /tagexplorer/ && tagexplorer-flat == true && tagexplorer-tags-only == false && tagexplorer-show-view-style-button == true",
                    "group": "navigation@4"
                },
                {
                    "command": "tagexplorer.showTreeView",
                    "when": "view =~ /tagexplorer/ && tagexplorer-flat == false && tagexplorer-tags-only == true && tagexplorer-show-view-style-button == true",
                    "group": "navigation@4"
                },
                {
                    "command": "tagexplorer.filter",
                    "when": "view =~ /tagexplorer/ && tagexplorer-filtered == false && tagexplorer-show-filter-button == true",
                    "group": "navigation@6"
                },
                {
                    "command": "tagexplorer.filterClear",
                    "when": "view =~ /tagexplorer/ && tagexplorer-filtered == true && tagexplorer-show-filter-button == true",
                    "group": "navigation@6"
                },
                {
                    "command": "tagexplorer.refresh",
                    "when": "view =~ /tagexplorer/ && tagexplorer-show-refresh-button == true",
                    "group": "navigation@7"
                },
                {
                    "command": "tagexplorer.expand",
                    "when": "view =~ /tagexplorer/ && tagexplorer-expanded == false && tagexplorer-collapsible && tagexplorer-show-expand-button == true",
                    "group": "navigation@8"
                },
                {
                    "command": "tagexplorer.collapse",
                    "when": "view =~ /tagexplorer/ && tagexplorer-expanded == true && tagexplorer-collapsible && tagexplorer-show-expand-button == true",
                    "group": "navigation@8"
                }
            ],
            "view/item/context": [
                {
                    "command": "tagexplorer.showOnlyThisFolder",
                    "when": "view =~ /tagexplorer/ && viewItem == folder"
                },
                {
                    "command": "tagexplorer.showOnlyThisFolderAndSubfolders",
                    "when": "view =~ /tagexplorer/ && viewItem == folder"
                },
                {
                    "command": "tagexplorer.excludeThisFolder",
                    "when": "view =~ /tagexplorer/ && viewItem == folder"
                },
                {
                    "command": "tagexplorer.filterClear",
                    "when": "view =~ /tagexplorer/ && tagexplorer-global-filter-active"
                },
                {
                    "command": "tagexplorer.resetFolderFilter",
                    "when": "view =~ /tagexplorer/ && tagexplorer-folder-filter-active"
                }
            ]
        },
        "commands": [
            {
                "command": "tagexplorer.showFlatView",
                "title": "Show Flat View",
                "category": "Todo Tree",
                "icon": "$(list-unordered)"
            },
            {
                "command": "tagexplorer.showTagsOnlyView",
                "title": "Show Tags Only View",
                "category": "Todo Tree",
                "icon": "$(list-flat)"
            },
            {
                "command": "tagexplorer.showTreeView",
                "title": "Show Tree View",
                "category": "Todo Tree",
                "icon": "$(list-tree)"
            },
            {
                "command": "tagexplorer.refresh",
                "title": "Refresh",
                "category": "Todo Tree",
                "icon": "$(refresh)"
            },
            {
                "command": "tagexplorer.expand",
                "title": "Expand Tree",
                "category": "Todo Tree",
                "icon": "$(expand-all)"
            },
            {
                "command": "tagexplorer.collapse",
                "title": "Collapse Tree",
                "category": "Todo Tree",
                "icon": "$(collapse-all)"
            },
            {
                "command": "tagexplorer.filter",
                "title": "Filter Tree",
                "category": "Todo Tree",
                "icon": "$(filter)"
            },
            {
                "command": "tagexplorer.filterClear",
                "title": "Clear Filter",
                "category": "Todo Tree",
                "icon": "$(clear-all)"
            },
            {
                "command": "tagexplorer.scanOpenFilesOnly",
                "title": "Scan Open Files Only",
                "category": "Todo Tree",
                "icon": "$(files)"
            },
            {
                "command": "tagexplorer.scanCurrentFileOnly",
                "title": "Scan Current File Only",
                "category": "Todo Tree",
                "icon": "$(symbol-file)"
            },
            {
                "command": "tagexplorer.scanWorkspace",
                "title": "Scan Workspace",
                "category": "Todo Tree",
                "icon": "$(folder)"
            },
            {
                "command": "tagexplorer.exportTree",
                "title": "Export Tree",
                "category": "Todo Tree",
                "icon": "$(save)"
            },
            {
                "command": "tagexplorer.showOnlyThisFolder",
                "title": "Only Show This Folder",
                "category": "Todo Tree",
                "icon": "$(filter)"
            },
            {
                "command": "tagexplorer.showOnlyThisFolderAndSubfolders",
                "title": "Only Show This Folder And Subfolders",
                "category": "Todo Tree",
                "icon": "$(filter)"
            },
            {
                "command": "tagexplorer.excludeThisFolder",
                "title": "Hide This Folder",
                "category": "Todo Tree",
                "icon": "$(filter)"
            },
            {
                "command": "tagexplorer.resetFolderFilter",
                "title": "Reset Folder Filter",
                "category": "Todo Tree",
                "icon": "$(clear-all)"
            },
            {
                "command": "tagexplorer.reveal",
                "title": "Reveal Current File In Tree",
                "category": "Todo Tree",
                "icon": "$(location)"
            },
            {
                "command": "tagexplorer.resetCache",
                "title": "Reset Cache",
                "category": "Todo Tree"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Tag Explorer",
            "properties": {
                "tagexplorer.filtering.excludedWorkspaces": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "An array of workspace names to exclude as roots in the tree (wildcards can be used).",
                    "type": "array"
                },
                "tagexplorer.filtering.excludeGlobs": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "Globs for use in limiting search results by exclusion (applied after **includeGlobs**), e.g. `[\"**/*.txt\"]` to ignore all .txt files",
                    "type": "array"
                },
                "tagexplorer.filtering.ignoreGitSubmodules": {
                    "default": false,
                    "markdownDescription": "If true, any subfolders containing a .git file will be ignored when searching.",
                    "type": "boolean"
                },
                "tagexplorer.filtering.includedWorkspaces": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "An array of workspace names to include as roots in the tree (wildcards can be used). An empty array includes all workspace folders.",
                    "type": "array"
                },
                "tagexplorer.filtering.includeGlobs": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "Globs for use in limiting search results by inclusion, e.g. `[\"**/unit-tests/*.js\"]` to only show .js files in unit-tests subfolders",
                    "type": "array"
                },
                "tagexplorer.filtering.includeHiddenFiles": {
                    "default": false,
                    "markdownDescription": "Include hidden files (starting with a .)",
                    "type": "boolean"
                },
                "tagexplorer.filtering.passGlobsToRipgrep": {
                    "default": true,
                    "markdownDescription": "By default the globs are passed into ripgrep to narrow the search. Set this to false to apply the globs *after* the search (pre 0.0.132 behaviour).",
                    "type": "boolean"
                },
                "tagexplorer.filtering.useBuiltInExcludes": {
                    "default": "none",
                    "enum": [
                        "none",
                        "file excludes",
                        "search excludes",
                        "file and search excludes"
                    ],
                    "markdownDescription": "Add VSCode's `files.exclude` and/or `search.exclude` list to the ignored paths.",
                    "markdownEnumDescriptions": [
                        "Don't use any built in excludes",
                        "Use the Files:Exclude setting",
                        "Use the Search:Exclude setting",
                        "Use the Files:Exclude and the Search:Exclude setting"
                    ],
                    "type": "string"
                },
                "tagexplorer.general.debug": {
                    "default": false,
                    "markdownDescription": "Create a debug channel in the Output view",
                    "type": "boolean"
                },
                "tagexplorer.general.enableFileWatcher": {
                    "default": false,
                    "markdownDescription": "Set to true to enable automatic updates when files in the workspace are created, changed or deleted",
                    "type": "boolean"
                },
                "tagexplorer.general.fileWatcherGlob": {
                    "default": "**/*",
                    "markdownDescription": "Glob for use with the file watcher. Change this if the default setting causes performance issues.",
                    "type": "string"
                },
                "tagexplorer.general.rootFolder": {
                    "default": "",
                    "markdownDescription": "Folder in which to run the search (defaults to the workspace folder)",
                    "type": "string"
                },
                "tagexplorer.highlights.defaultHighlight": {
                    "default": {},
                    "markdownDescription": "Default configuration for highlighting. [Read more...](https://github.com/Warr1611/tagexplorer#highlighting)",
                    "type": "object"
                },
                "tagexplorer.highlights.enabled": {
                    "default": true,
                    "markdownDescription": "Set to false to disable highlighting",
                    "type": "boolean"
                },
                "tagexplorer.highlights.highlightDelay": {
                    "default": 500,
                    "markdownDescription": "Delay before highlighting tags within files (milliseconds)",
                    "type": "integer"
                },
                "tagexplorer.highlights.schemes": {
                    "default": [
                        "file",
                        "untitled"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "Editor schemes to show highlights in. To show highlights in settings files, for instance, add 'vscode-userdata' or for output windows, use 'output'.",
                    "type": "array"
                },
                "tagexplorer.regex.regex": {
                    "default": "#[^\\s#]+",
                    "markdownDescription": "Regular expression for matching Tags. *Note: $TAGS will be replaced by the tag list.*",
                    "type": "string"
                },
                "tagexplorer.regex.regexCaseSensitive": {
                    "default": true,
                    "markdownDescription": "Use a case sensitive regular expression",
                    "type": "boolean"
                },
                "tagexplorer.ripgrep.ripgrep": {
                    "default": "",
                    "markdownDescription": "Location of your version of ripgrep",
                    "type": "string"
                },
                "tagexplorer.ripgrep.ripgrepArgs": {
                    "default": "--max-columns=1000 --no-config ",
                    "markdownDescription": "Additional arguments to pass to ripgrep (Use with caution!)",
                    "type": "string"
                },
                "tagexplorer.ripgrep.ripgrepMaxBuffer": {
                    "default": 200,
                    "markdownDescription": "Size of the buffer to use for retrieving output from ripgrep (kilobytes)",
                    "type": "integer"
                },
                "tagexplorer.tree.autoRefresh": {
                    "default": true,
                    "markdownDescription": "Refresh the tree when files are opened or saved",
                    "type": "boolean"
                },
                "tagexplorer.tree.disableCompactFolders": {
                    "default": false,
                    "markdownDescription": "Prevent the tree from showing compact folders",
                    "type": "boolean"
                },
                "tagexplorer.tree.expanded": {
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show the tree initially fully expanded",
                    "type": "boolean"
                },
                "tagexplorer.tree.filterCaseSensitive": {
                    "default": false,
                    "markdownDescription": "Set to true if you want the view filtering to be case sensitive",
                    "type": "boolean"
                },
                "tagexplorer.tree.flat": {
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show the tree initially as flat list of files",
                    "type": "boolean"
                },
                "tagexplorer.tree.hideTreeWhenEmpty": {
                    "default": true,
                    "markdownDescription": "Normally, the tree is removed from the explorer view if nothing is found. Set this to false to keep the view present.",
                    "type": "boolean"
                },
                "tagexplorer.tree.labelFormat": {
                    "default": "${tag} ${after}",
                    "markdownDescription": "Format for tree items",
                    "type": "string"
                },
                "tagexplorer.tree.scanAtStartup": {
                    "default": true,
                    "markdownDescription": "Normally the tree is built as soon as the window is opened. If you have a large code base and want to manually start the scan, set this to false.",
                    "type": "boolean"
                },
                "tagexplorer.tree.scanMode": {
                    "default": "workspace",
                    "enum": [
                        "workspace",
                        "open files",
                        "current file"
                    ],
                    "markdownDescription": "Set this to change which files are scanned",
                    "markdownEnumDescriptions": [
                        "Scan the whole workspace (or workspaces)",
                        "Scan open files only",
                        "Scan the current file only"
                    ],
                    "type": "string"
                },
                "tagexplorer.tree.showBadges": {
                    "default": true,
                    "markdownDescription": "Show badges and SCM state in the tree view",
                    "type": "boolean"
                },
                "tagexplorer.tree.showCountsInTree": {
                    "default": false,
                    "markdownDescription": "Show counts of Tags in the tree",
                    "type": "boolean"
                },
                "tagexplorer.tree.showInExplorer": {
                    "default": true,
                    "markdownDescription": "Show the tree in the explorer view",
                    "type": "boolean"
                },
                "tagexplorer.tree.showScanModeButton": {
                    "default": false,
                    "markdownDescription": "Show a button on the tree view header to change between scanning the current file, open files, or the whole workspace.",
                    "type": "boolean"
                },
                "tagexplorer.tree.showScanOpenFilesOrWorkspaceButton": {
                    "default": false,
                    "deprecationMessage": "This setting is no longer used, please use \"tagexplorer.tree.scanMode\" instead.",
                    "type": "boolean"
                },
                "tagexplorer.tree.buttons.reveal": {
                    "default": true,
                    "markdownDescription": "Show a button in the tree view title bar to reveal the current item (only when track file is not enabled)",
                    "type": "boolean"
                },
                "tagexplorer.tree.buttons.scanMode": {
                    "default": false,
                    "markdownDescription": "Show a button in the tree view title bar to change the Scan Mode setting",
                    "type": "boolean"
                },
                "tagexplorer.tree.buttons.viewStyle": {
                    "default": true,
                    "markdownDescription": "Show a button in the tree view title bar to change the view style (tree, flat or tags only)",
                    "type": "boolean"
                },
                "tagexplorer.tree.buttons.filter": {
                    "default": true,
                    "markdownDescription": "Show a button in the tree view title bar allowing the tree to be filtered by entering some text",
                    "type": "boolean"
                },
                "tagexplorer.tree.buttons.refresh": {
                    "default": true,
                    "markdownDescription": "Show a refresh button in the tree view title bar",
                    "type": "boolean"
                },
                "tagexplorer.tree.buttons.expand": {
                    "default": true,
                    "markdownDescription": "Show a button in the tree view title bar to expand or collapse the whole tree",
                    "type": "boolean"
                },
                "tagexplorer.tree.buttons.export": {
                    "default": false,
                    "markdownDescription": "Show a button in the tree view title bar to create a file showing the tree content",
                    "type": "boolean"
                },
                "tagexplorer.tree.showTagsFromOpenFilesOnly": {
                    "default": false,
                    "deprecationMessage": "This setting is no longer used, please use \"tagexplorer.tree.scanMode\" instead.",
                    "type": "boolean"
                },
                "tagexplorer.tree.sortTagsOnlyViewAlphabetically": {
                    "default": false,
                    "markdownDescription": "Sort items in the tags only view alphabetically instead of by file and line number",
                    "type": "boolean"
                },
                "tagexplorer.tree.tagsOnly": {
                    "default": false,
                    "markdownDescription": "When opening new workspaces, show only tag elements in tree",
                    "type": "boolean"
                },
                "tagexplorer.tree.tooltipFormat": {
                    "default": "${filepath}, line ${line}",
                    "markdownDescription": "Tree item tooltip format",
                    "type": "string"
                },
                "tagexplorer.tree.trackFile": {
                    "default": true,
                    "markdownDescription": "Track the current file in the tree view",
                    "type": "boolean"
                }
            }
        }
    },
    // "__metadata": {
    //     "id": "261cac81-cd7b-4555-bb41-0c2d2bcd3e70",
    //     "publisherId": "d4906d2e-f2ee-492d-9c7c-02b6160599ec",
    //     "publisherDisplayName": "Warr1611"
    // },
    "dependencies": {
        "comment-patterns": "^0.10.1",
        "fast-strftime": "^1.1.1",
        "find": "^0.3.0",
        "micromatch": "^4.0.2",
        "octicons": "^8.3.0",
        "treeify": "^1.1.0"
    }
}
